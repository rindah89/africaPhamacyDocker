services:
  mongodb:
    image: mongo:7.0
    container_name: africapharmacy-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-africapharmacy}
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-keyfile:/etc/mongo/mongodb-keyfile
    networks:
      - africapharmacy-network
    command: mongod --replSet rs0 --bind_ip_all --keyFile /etc/mongo/mongodb-keyfile --auth
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile.working
    container_name: africapharmacy-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - ./.env.docker
    environment:
      # Database - Updated for replica set
      DATABASE_URL: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/${MONGO_DATABASE:-africapharmacy}?authSource=admin&replicaSet=rs0
      
      # NextAuth
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      
      # Email (optional)
      EMAIL_SERVER: ${EMAIL_SERVER:-}
      EMAIL_FROM: ${EMAIL_FROM:-noreply@africapharmacy.local}
      
      # Cloudinary (optional)
      NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME: ${NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME:-}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY:-}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET:-}
      
      # Other environment variables
      NEXT_PUBLIC_BASE_URL: ${NEXT_PUBLIC_BASE_URL:-http://localhost:3000}
      
      # Use local storage for file uploads
      NEXT_PUBLIC_USE_LOCAL_STORAGE: "true"
    depends_on:
      mongodb:
        condition: service_healthy
      mongo-init:
        condition: service_completed_successfully
    volumes:
      - ./public/uploads:/app/public/uploads
    networks:
      - africapharmacy-network

  # MongoDB replica set initializer
  mongo-init:
    image: mongo:7.0
    container_name: africapharmacy-mongo-init
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - africapharmacy-network
    restart: "no"
    volumes:
      - ./init-mongo.js:/init-mongo.js
    command:
      - sh
      - -c
      - |
        echo "Waiting for MongoDB to be healthy..."
        until mongosh --host mongodb:27017 --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 1)'
        do
          echo "..."
          sleep 2
        done

        echo "Checking if replica set is already initialized..."
        if mongosh --host mongodb:27017 -u admin -p password123 --authenticationDatabase admin --eval 'rs.status().ok' | grep -q "1"; then
          echo "Replica set already initialized. Skipping rs.initiate()."
        else
          echo "MongoDB healthy. Initializing replica set..."
          mongosh --host mongodb:27017 -u admin -p password123 --authenticationDatabase admin --eval '
          rs.initiate(
            {
              _id: "rs0",
              members: [
                { _id: 0, host: "mongodb:27017" }
              ]
            }
          )
          '
        fi

  # Optional: MongoDB Express for database management UI
  mongo-express:
    image: mongo-express:latest
    container_name: africapharmacy-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME:-admin}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/?replicaSet=rs0
      ME_CONFIG_BASICAUTH: false
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - africapharmacy-network

volumes:
  mongodb_data:

networks:
  africapharmacy-network:
    driver: bridge
