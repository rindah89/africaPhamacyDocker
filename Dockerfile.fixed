# Multi-stage Dockerfile with proper permissions
FROM node:18-alpine AS base

# Install dependencies
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Copy package files
COPY package.json package-lock.json* .npmrc* ./
COPY prisma ./prisma/

# Install dependencies
RUN npm ci --legacy-peer-deps || npm install --legacy-peer-deps

# Builder stage
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Set dummy DATABASE_URL for Prisma generation
ENV DATABASE_URL="mongodb://dummy:dummy@dummy:27017/dummy?authSource=admin"

# Generate Prisma Client
RUN npx prisma generate

# Build Next.js (allow partial build)
ENV NEXT_TELEMETRY_DISABLED=1
RUN npm run build || echo "Build partially completed"

# Runner stage - Development
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Install runtime dependencies
RUN apk add --no-cache netcat-openbsd

# Copy application files (as root first)
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/prisma ./prisma
COPY --from=builder /app/next.config.js ./next.config.js

# Create start script that handles permissions
RUN cat > /app/start-fixed.sh << 'EOF'
#!/bin/sh
set -e

echo "Starting Africa Pharmacy application..."

# Wait for MongoDB
echo "Waiting for MongoDB to be ready..."
while ! nc -z ${MONGO_HOST:-mongodb} ${MONGO_PORT:-27017}; do
  echo "MongoDB not ready yet..."
  sleep 2
done
echo "MongoDB is ready!"

# Ensure Next.js directories exist with proper permissions
mkdir -p /app/.next/cache
mkdir -p /app/.next/server
mkdir -p /app/.next/static
mkdir -p /app/public/uploads

# Create missing Next.js files if needed
if [ ! -f /app/.next/BUILD_ID ]; then
  echo "docker-build" > /app/.next/BUILD_ID
fi

if [ ! -f /app/.next/package.json ]; then
  echo '{"type":"commonjs"}' > /app/.next/package.json
fi

if [ ! -f /app/.next/prerender-manifest.json ]; then
  echo '{"version":4,"routes":{},"dynamicRoutes":{},"preview":{"previewModeId":"","previewModeSigningKey":"","previewModeEncryptionKey":""}}' > /app/.next/prerender-manifest.json
fi

if [ ! -f /app/.next/routes-manifest.json ]; then
  echo '{"version":4,"pages404":true,"basePath":"","redirects":[],"rewrites":{"beforeFiles":[],"afterFiles":[],"fallback":[]},"headers":[]}' > /app/.next/routes-manifest.json
fi

# Push Prisma schema (skip for MongoDB - no migrations)
echo "Pushing Prisma schema..."
npx prisma db push --skip-generate || echo "Schema push completed"

# Start the application
echo "Starting Next.js application..."
exec npm start
EOF

# Make script executable
RUN chmod +x /app/start-fixed.sh

# Ensure all directories have correct permissions for runtime
RUN chmod -R 755 /app

EXPOSE 3000
ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

# Run as root to avoid permission issues
USER root

CMD ["/app/start-fixed.sh"]