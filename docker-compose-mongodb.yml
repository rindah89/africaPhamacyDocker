# MongoDB-only Docker Compose for Africa Pharmacy
# This runs only the database in Docker while the app runs on the host

services:
  mongodb:
    image: mongo:7.0
    container_name: africapharmacy-mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      # Persist database data
      - mongodb_data:/data/db
    command: mongod --replSet rs0 --bind_ip_all --noauth
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - africapharmacy-network

  # One-time replica set initializer
  mongo-init:
    image: mongo:7.0
    container_name: africapharmacy-mongo-init
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - africapharmacy-network
    restart: "no"
    command: |
      mongosh --host mongodb:27017 --eval '
        try {
          rs.status();
          print("Replica set already initialized");
        } catch (e) {
          print("Initializing replica set...");
          rs.initiate({
            _id: "rs0",
            members: [{ _id: 0, host: "mongodb:27017", priority: 1 }]
          });
          print("Replica set initialized!");
        }
      '

  # Optional: MongoDB Express for database management
  # Comment out if not needed in production
  mongo-express:
    image: mongo-express:latest
    container_name: africapharmacy-mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongodb:27017/?replicaSet=rs0
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongodb
      - mongo-init
    networks:
      - africapharmacy-network

volumes:
  mongodb_data:
    name: africapharmacy_mongodb_data

networks:
  africapharmacy-network:
    driver: bridge