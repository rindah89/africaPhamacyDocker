# Working Dockerfile for Africa Pharmacy
FROM node:18-alpine AS base

# Install dependencies
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

COPY package.json package-lock.json* .npmrc* ./
COPY prisma ./prisma/
RUN npm ci --legacy-peer-deps || npm install --legacy-peer-deps

# Build stage
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

ENV DATABASE_URL="mongodb://dummy:dummy@dummy:27017/dummy?authSource=admin"
RUN npx prisma generate

# Build Next.js
ENV SKIP_BUILD_STATIC_GENERATION=1
RUN npm run build || echo "Build partially completed"

# Runtime stage
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production

RUN apk add --no-cache netcat-openbsd

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy application files
COPY --from=builder /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next ./.next
COPY --from=deps --chown=nextjs:nodejs /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/prisma ./prisma
COPY --from=builder /app/next.config.js ./next.config.js

# Create start script inline
RUN echo '#!/bin/sh' > start.sh && \
    echo 'echo "Waiting for MongoDB..."' >> start.sh && \
    echo 'while ! nc -z mongodb 27017; do sleep 2; done' >> start.sh && \
    echo 'echo "MongoDB ready!"' >> start.sh && \
    echo 'if [ ! -f .next/BUILD_ID ]; then echo "docker-build" > .next/BUILD_ID; fi' >> start.sh && \
    echo 'if [ ! -f .next/prerender-manifest.json ]; then echo "{\"version\":4,\"routes\":{},\"dynamicRoutes\":{},\"preview\":{}}" > .next/prerender-manifest.json; fi' >> start.sh && \
    echo 'if [ ! -f .next/routes-manifest.json ]; then echo "{\"version\":4,\"pages404\":true,\"basePath\":\"\",\"redirects\":[],\"rewrites\":{\"beforeFiles\":[],\"afterFiles\":[],\"fallback\":[]},\"headers\":[]}" > .next/routes-manifest.json; fi' >> start.sh && \
    echo 'npm start' >> start.sh && \
    chmod +x start.sh

# Create uploads directory
RUN mkdir -p public/uploads && chown -R nextjs:nodejs /app

USER nextjs

EXPOSE 3000
ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

CMD ["./start.sh"]